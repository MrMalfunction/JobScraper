services:
  app:
    build:
      context: ../../
      dockerfile: ./infra/prod/Dockerfile
    ports:
      - "8085:8085"
    environment:
      - PORT=8085
      - GO_ENV=production
      - database_dsn=postgres://user:password@db:5455/dbname?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    restart: always

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
      POSTGRES_PORT: 5455
    ports:
      - "5455:5455"
    # expose:
    #   - 5455
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    command:
      ["postgres", "-c", "listen_addresses=*", "-c", "max_connections=200", "-c", "port=5455"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dbname -p 5455"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
